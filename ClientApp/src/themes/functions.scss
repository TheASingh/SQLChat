@use 'sass:map';
@use '@angular/material' as mat;

@mixin generate-theme-vars($theme) {
  //default palette foreground/background:
  $foreground-palette: map-get($theme, foreground);
  $background-palette: map-get($theme, background);

  /////////////////////////////////////////////////
  // SCSS VARS
  /////////////////////////////////////////////////
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);


  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  $warn-palette: map.get($color-config, 'warn');

  $primary: mat.get-color-from-palette($primary-palette);
  /*$primary: mat-color(map.get($theme, primary));*/
  $accent: mat.get-color-from-palette($accent-palette);
  $warn: mat.get-color-from-palette($warn-palette);

  $base: map.get($foreground-palette, base);
  $divider: map.get($foreground-palette, divider);
  $dividers: map.get($foreground-palette, dividers);
  $disabled: map.get($foreground-palette, disabled);
  $disabled-button: map.get($foreground-palette, disabled-button);
  $disabled-text: map.get($foreground-palette, disabled-text);
  $hint-text: map.get($foreground-palette, hint-text);
  $secondary-text: map.get($foreground-palette, secondary-text);
  $icon: map.get($foreground-palette, icon);
  $icons: map.get($foreground-palette, icons);
  $text: map.get($foreground-palette, text);
  $slider-off: map.get($foreground-palette, slider-off);
  $slider-off-active: map.get($foreground-palette, slider-off-active);

  $status-bar: map.get($background-palette, status-bar);
  $app-bar: map.get($background-palette, app-bar);
  $background: map.get($background-palette, background);
  $hover: map.get($background-palette, hover);
  $card: map.get($background-palette, card);
  $dialog: map.get($background-palette, dialog);
  $disabled-button: map.get($background-palette, disabled-button);
  $raised-button: map.get($background-palette, raised-button);
  $focused-button: map.get($background-palette, focused-button);
  $selected-button: map.get($background-palette, selected-button);
  $selected-disabled-button: map.get($background-palette, selected-disabled-button);
  $disabled-button-toggle: map.get($background-palette, disabled-button-toggle);

  /////////////////////////////////////////////////
  // CSS VARS
  /////////////////////////////////////////////////


  --primary-color: #{$primary};
  --accent-color: #{$accent};
  --warn-color: #{$warn};
  --main-text-color: #ffffff;
  --base-color: #{$base};
  --divider-color: #{$divider};
  --dividers-color: #{$dividers};
  --disabled-color: #{$disabled};
  --disabled-text-color: #{$disabled-text};
  --hint-text-color: #{$hint-text};
  --secondary-text-color: #{$secondary-text};
  --icon-color: #{$icon};
  --icons-color: #{$icons};
  --text-color: #{$text};
  --slider-off-color: #{$slider-off};
  --slider-off-active-color: #{$slider-off-active};
  --status-bar-color: #{$status-bar};
  --app-bar-color: #{$app-bar};
  --background-color: #{$background};
  --hover-color: #{$hover};
  --card-color: #{$card};
  --dialog-color: #{$dialog};
  --disabled-button-color: #{$disabled-button};
  --raised-button-color: #{$raised-button};
  --focused-button-color: #{$focused-button};
  --selected-button-color: #{$selected-button};
  --selected-disabled-button-color: #{$selected-disabled-button};
  --disabled-button-toggle-color: #{$disabled-button-toggle};
}
